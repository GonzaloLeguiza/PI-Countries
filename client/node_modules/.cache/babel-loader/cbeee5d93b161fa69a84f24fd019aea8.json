{"ast":null,"code":"const initialState = {\n  countries: [],\n  allCountries: []\n};\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'GET_COUNTRIES':\n      return {\n        ...state,\n        countries: action.payload,\n        allCountries: action.payload\n      };\n    case 'FILTER_BY_CONTINENT':\n      console.log('payloadCont ' + action.payload);\n      const allCountries = state.allCountries;\n      const continentFiltered = action.payload === 'All' ? allCountries : allCountries.filter(el => el.continents[0] === action.payload);\n      return {\n        ...state,\n        countries: continentFiltered\n      };\n    // case 'GET_ACTIVITY':\n    //     return {\n    //         ...state,\n    //         activities :action.payload,\n    //         sortActivities : action.payload\n    //     }\n    case 'FILTER_ACTIVITY':\n      const allCountries2 = state.allCountries;\n      const createdFilter = action.payload === 'Act' ? allCountries2.filter(el => el.createdActivity) : allCountries2.filter(el => !el.createdActivity);\n      return {\n        ...state,\n        countries: action.payload === 'All' ? allCountries2 : createdFilter\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;\n\n// const initialState = {\n//     countries : [],\n//     allCountries : [],\n//     Activities: [],\n//     page: 1,\n//     currentPage : 1\n// }\n//  const countriesPerPage = 10;\n\n// function rootReducer(state=initialState, action) {\n//     switch(action.type){\n//         case 'GET_COUNTRIES':\n//             return {\n//                 ...state,\n//                 countries:action.payload,\n//                 allCountries : action.payload\n//             }\n//         case 'FILTER_BY_CONTINENT':\n//             console.log('payloadCont ' + action.payload);\n//             const allCountries =state.allCountries;\n//             const continentFiltered = action.payload === 'All'? allCountries : allCountries.filter(el => el.continents[0] === action.payload)\n//             return{\n//                 ...state,\n//                 countries:continentFiltered\n\n//             }\n//         // case 'GET_ACTIVITY':\n//         //     return {\n//         //         ...state,\n//         //         activities :action.payload,\n//         //         sortActivities : action.payload\n//         //     }\n\n//         case 'FILTER_ACTIVITY':\n//             const allCountries2 =state.allCountries;\n//             const createdFilter = action.payload === 'All' ? allCountries2 : allCountries2.filter(e => e.Activities && e.Activities.some(a => a.nombre === action.payload))\n//             return {\n//                 ...state,\n//                 countries : createdFilter,\n//                 page : Math.ceil(createdFilter.length/countriesPerPage),\n//                 currentPage :1\n//             }\n\n//             default: return state;\n//     }\n// }\n\n// export default rootReducer;","map":{"version":3,"names":["initialState","countries","allCountries","rootReducer","state","action","type","payload","console","log","continentFiltered","filter","el","continents","allCountries2","createdFilter","createdActivity"],"sources":["C:/Users/legui/Desktop/PI-Countries-main/client/src/reducer/index.js"],"sourcesContent":["const initialState = {\r\n    countries : [],\r\n    allCountries : []\r\n}\r\n\r\nfunction rootReducer(state=initialState, action) {\r\n    switch(action.type){\r\n        case 'GET_COUNTRIES':\r\n            return {\r\n                ...state,\r\n                countries:action.payload,\r\n                allCountries : action.payload\r\n            }\r\n        case 'FILTER_BY_CONTINENT':\r\n            console.log('payloadCont ' + action.payload);\r\n            const allCountries =state.allCountries;\r\n            const continentFiltered = action.payload === 'All'? allCountries : allCountries.filter(el => el.continents[0] === action.payload)\r\n            return{\r\n                ...state,\r\n                countries:continentFiltered\r\n                \r\n            }\r\n        // case 'GET_ACTIVITY':\r\n        //     return {\r\n        //         ...state,\r\n        //         activities :action.payload,\r\n        //         sortActivities : action.payload\r\n        //     }\r\n        case 'FILTER_ACTIVITY':\r\n            const allCountries2 =state.allCountries;\r\n            const createdFilter = action.payload === 'Act' ? allCountries2.filter(el => el.createdActivity) : allCountries2.filter(el => !el.createdActivity)\r\n            return {\r\n                ...state,\r\n                countries : action.payload === 'All' ? allCountries2 :createdFilter\r\n            }\r\n\r\n            default: return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const initialState = {\r\n//     countries : [],\r\n//     allCountries : [],\r\n//     Activities: [],\r\n//     page: 1,\r\n//     currentPage : 1\r\n// }\r\n//  const countriesPerPage = 10;\r\n\r\n// function rootReducer(state=initialState, action) {\r\n//     switch(action.type){\r\n//         case 'GET_COUNTRIES':\r\n//             return {\r\n//                 ...state,\r\n//                 countries:action.payload,\r\n//                 allCountries : action.payload\r\n//             }\r\n//         case 'FILTER_BY_CONTINENT':\r\n//             console.log('payloadCont ' + action.payload);\r\n//             const allCountries =state.allCountries;\r\n//             const continentFiltered = action.payload === 'All'? allCountries : allCountries.filter(el => el.continents[0] === action.payload)\r\n//             return{\r\n//                 ...state,\r\n//                 countries:continentFiltered\r\n                \r\n//             }\r\n//         // case 'GET_ACTIVITY':\r\n//         //     return {\r\n//         //         ...state,\r\n//         //         activities :action.payload,\r\n//         //         sortActivities : action.payload\r\n//         //     }\r\n\r\n\r\n\r\n\r\n\r\n//         case 'FILTER_ACTIVITY':\r\n//             const allCountries2 =state.allCountries;\r\n//             const createdFilter = action.payload === 'All' ? allCountries2 : allCountries2.filter(e => e.Activities && e.Activities.some(a => a.nombre === action.payload))\r\n//             return {\r\n//                 ...state,\r\n//                 countries : createdFilter,\r\n//                 page : Math.ceil(createdFilter.length/countriesPerPage),\r\n//                 currentPage :1\r\n//             }\r\n\r\n\r\n\r\n//             default: return state;\r\n//     }\r\n// }\r\n\r\n// export default rootReducer;"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,SAAS,EAAG,EAAE;EACdC,YAAY,EAAG;AACnB,CAAC;AAED,SAASC,WAAW,GAA6B;EAAA,IAA5BC,KAAK,uEAACJ,YAAY;EAAA,IAAEK,MAAM;EAC3C,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,eAAe;MAChB,OAAO;QACH,GAAGF,KAAK;QACRH,SAAS,EAACI,MAAM,CAACE,OAAO;QACxBL,YAAY,EAAGG,MAAM,CAACE;MAC1B,CAAC;IACL,KAAK,qBAAqB;MACtBC,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGJ,MAAM,CAACE,OAAO,CAAC;MAC5C,MAAML,YAAY,GAAEE,KAAK,CAACF,YAAY;MACtC,MAAMQ,iBAAiB,GAAGL,MAAM,CAACE,OAAO,KAAK,KAAK,GAAEL,YAAY,GAAGA,YAAY,CAACS,MAAM,CAACC,EAAE,IAAIA,EAAE,CAACC,UAAU,CAAC,CAAC,CAAC,KAAKR,MAAM,CAACE,OAAO,CAAC;MACjI,OAAM;QACF,GAAGH,KAAK;QACRH,SAAS,EAACS;MAEd,CAAC;IACL;IACA;IACA;IACA;IACA;IACA;IACA,KAAK,iBAAiB;MAClB,MAAMI,aAAa,GAAEV,KAAK,CAACF,YAAY;MACvC,MAAMa,aAAa,GAAGV,MAAM,CAACE,OAAO,KAAK,KAAK,GAAGO,aAAa,CAACH,MAAM,CAACC,EAAE,IAAIA,EAAE,CAACI,eAAe,CAAC,GAAGF,aAAa,CAACH,MAAM,CAACC,EAAE,IAAI,CAACA,EAAE,CAACI,eAAe,CAAC;MACjJ,OAAO;QACH,GAAGZ,KAAK;QACRH,SAAS,EAAGI,MAAM,CAACE,OAAO,KAAK,KAAK,GAAGO,aAAa,GAAEC;MAC1D,CAAC;IAED;MAAS,OAAOX,KAAK;EAAC;AAElC;AAEA,eAAeD,WAAW;;AAQ1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}