{"ast":null,"code":"const initialState = {\n  countries: [],\n  allCountries: [],\n  sortCountries: [],\n  activities: [],\n  sortActivities: []\n};\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'GET_COUNTRIES':\n      return {\n        ...state,\n        countries: action.payload,\n        allCountries: action.payload,\n        sortCountries: action.payload\n      };\n    case 'FILTER_BY_CONTINENT':\n      console.log('payloadCont ' + action.payload);\n      const allCountries = state.allCountries;\n      const continentFiltered = action.payload === 'All' ? allCountries : allCountries.filter(el => el.continente === action.payload);\n      return {\n        ...state,\n        countries: continentFiltered\n      };\n    case 'GET_ACTIVITIES':\n      return {\n        ...state,\n        activities: action.payload,\n        sortActivities: action.payload\n      };\n    case 'FILTER_ACTIVITY':\n      console.log('payloadAct: ' + action.payload);\n      const countriesAct = state.sortCountries.filter(pais => pais.Activities.length > 0);\n      let array = [];\n      for (let i = 0; i < countriesAct.length; i++) {\n        for (let j = 0; j < countriesAct[i].Activities.length; j++) {\n          if (countriesAct[i].Activities[j].nombre === action.payload) {\n            array.push(countriesAct[i]);\n          }\n        }\n      }\n      return {\n        ...state,\n        countries: action.payload === 'All' ? state.sortCountries : array\n      };\n    case 'GET_COUNTRY_NAME':\n      return {\n        ...state,\n        countries: action.payload\n      };\n    case 'SORT_COUNTRY_POB':\n      return {\n        ...state,\n        countries: action.payload === 'Asc'\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;\n\n// const initialState = {\n//     countries : [],\n//     allCountries : [],\n//     Activities: [],\n//     page: 1,\n//     currentPage : 1\n// }\n//  const countriesPerPage = 10;\n\n// function rootReducer(state=initialState, action) {\n//     switch(action.type){\n//         case 'GET_COUNTRIES':\n//             return {\n//                 ...state,\n//                 countries:action.payload,\n//                 allCountries : action.payload\n//             }\n//         case 'FILTER_BY_CONTINENT':\n//             console.log('payloadCont ' + action.payload);\n//             const allCountries =state.allCountries;\n//             const continentFiltered = action.payload === 'All'? allCountries : allCountries.filter(el => el.continents[0] === action.payload)\n//             return{\n//                 ...state,\n//                 countries:continentFiltered\n\n//             }\n//         // case 'GET_ACTIVITY':\n//         //     return {\n//         //         ...state,\n//         //         activities :action.payload,\n//         //         sortActivities : action.payload\n//         //     }\n\n//         case 'FILTER_ACTIVITY':\n//             const allCountries2 =state.allCountries;\n//             const createdFilter = action.payload === 'All' ? allCountries2 : allCountries2.filter(e => e.Activities && e.Activities.some(a => a.nombre === action.payload))\n//             return {\n//                 ...state,\n//                 countries : createdFilter,\n//                 page : Math.ceil(createdFilter.length/countriesPerPage),\n//                 currentPage :1\n//             }\n\n//             default: return state;\n//     }\n// }\n\n// export default rootReducer;","map":{"version":3,"names":["initialState","countries","allCountries","sortCountries","activities","sortActivities","rootReducer","state","action","type","payload","console","log","continentFiltered","filter","el","continente","countriesAct","pais","Activities","length","array","i","j","nombre","push"],"sources":["C:/Users/legui/Desktop/PI-Countries-main/client/src/reducer/index.js"],"sourcesContent":["\r\n\r\nconst initialState = {\r\n    countries : [],\r\n    allCountries : [],\r\n    sortCountries: [],\r\n    activities: [],\r\n    sortActivities:[]\r\n}\r\n\r\nfunction rootReducer(state=initialState, action) {\r\n    switch(action.type){\r\n        case 'GET_COUNTRIES':\r\n            return {\r\n                ...state,\r\n                countries:action.payload,\r\n                allCountries : action.payload,\r\n                sortCountries : action.payload\r\n            }\r\n        case 'FILTER_BY_CONTINENT':\r\n            console.log('payloadCont ' + action.payload);\r\n            const allCountries =state.allCountries;\r\n            const continentFiltered = action.payload === 'All'? allCountries : allCountries.filter(el => el.continente === action.payload)\r\n            return{\r\n                ...state,\r\n                countries:continentFiltered\r\n                \r\n            }\r\n        case 'GET_ACTIVITIES':\r\n            return {\r\n                ...state,\r\n                activities :action.payload,\r\n                sortActivities : action.payload\r\n            }\r\n\r\n        case 'FILTER_ACTIVITY':\r\n            console.log('payloadAct: ' +action.payload)\r\n      \r\n            const countriesAct = state.sortCountries.filter((pais) => pais.Activities.length > 0);  \r\n      \r\n            let array = [];\r\n      \r\n            for (let i = 0; i < countriesAct.length; i++) {\r\n              for (let j = 0; j < countriesAct[i].Activities.length; j++) {\r\n                if (countriesAct[i].Activities[j].nombre === action.payload) {\r\n                  array.push(countriesAct[i]);\r\n                }\r\n              }\r\n            }\r\n            return {\r\n              ...state,\r\n              countries : action.payload === 'All' ? state.sortCountries : array\r\n            }\r\n\r\n            case 'GET_COUNTRY_NAME':\r\n                return{\r\n                    ...state,\r\n                    countries: action.payload\r\n                }\r\n\r\n            case 'SORT_COUNTRY_POB':\r\n                return{\r\n                    ...state,\r\n                    countries:action.payload === 'Asc'\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n            default: return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const initialState = {\r\n//     countries : [],\r\n//     allCountries : [],\r\n//     Activities: [],\r\n//     page: 1,\r\n//     currentPage : 1\r\n// }\r\n//  const countriesPerPage = 10;\r\n\r\n// function rootReducer(state=initialState, action) {\r\n//     switch(action.type){\r\n//         case 'GET_COUNTRIES':\r\n//             return {\r\n//                 ...state,\r\n//                 countries:action.payload,\r\n//                 allCountries : action.payload\r\n//             }\r\n//         case 'FILTER_BY_CONTINENT':\r\n//             console.log('payloadCont ' + action.payload);\r\n//             const allCountries =state.allCountries;\r\n//             const continentFiltered = action.payload === 'All'? allCountries : allCountries.filter(el => el.continents[0] === action.payload)\r\n//             return{\r\n//                 ...state,\r\n//                 countries:continentFiltered\r\n                \r\n//             }\r\n//         // case 'GET_ACTIVITY':\r\n//         //     return {\r\n//         //         ...state,\r\n//         //         activities :action.payload,\r\n//         //         sortActivities : action.payload\r\n//         //     }\r\n\r\n\r\n\r\n\r\n\r\n//         case 'FILTER_ACTIVITY':\r\n//             const allCountries2 =state.allCountries;\r\n//             const createdFilter = action.payload === 'All' ? allCountries2 : allCountries2.filter(e => e.Activities && e.Activities.some(a => a.nombre === action.payload))\r\n//             return {\r\n//                 ...state,\r\n//                 countries : createdFilter,\r\n//                 page : Math.ceil(createdFilter.length/countriesPerPage),\r\n//                 currentPage :1\r\n//             }\r\n\r\n\r\n\r\n//             default: return state;\r\n//     }\r\n// }\r\n\r\n// export default rootReducer;"],"mappings":"AAEA,MAAMA,YAAY,GAAG;EACjBC,SAAS,EAAG,EAAE;EACdC,YAAY,EAAG,EAAE;EACjBC,aAAa,EAAE,EAAE;EACjBC,UAAU,EAAE,EAAE;EACdC,cAAc,EAAC;AACnB,CAAC;AAED,SAASC,WAAW,GAA6B;EAAA,IAA5BC,KAAK,uEAACP,YAAY;EAAA,IAAEQ,MAAM;EAC3C,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,eAAe;MAChB,OAAO;QACH,GAAGF,KAAK;QACRN,SAAS,EAACO,MAAM,CAACE,OAAO;QACxBR,YAAY,EAAGM,MAAM,CAACE,OAAO;QAC7BP,aAAa,EAAGK,MAAM,CAACE;MAC3B,CAAC;IACL,KAAK,qBAAqB;MACtBC,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGJ,MAAM,CAACE,OAAO,CAAC;MAC5C,MAAMR,YAAY,GAAEK,KAAK,CAACL,YAAY;MACtC,MAAMW,iBAAiB,GAAGL,MAAM,CAACE,OAAO,KAAK,KAAK,GAAER,YAAY,GAAGA,YAAY,CAACY,MAAM,CAACC,EAAE,IAAIA,EAAE,CAACC,UAAU,KAAKR,MAAM,CAACE,OAAO,CAAC;MAC9H,OAAM;QACF,GAAGH,KAAK;QACRN,SAAS,EAACY;MAEd,CAAC;IACL,KAAK,gBAAgB;MACjB,OAAO;QACH,GAAGN,KAAK;QACRH,UAAU,EAAEI,MAAM,CAACE,OAAO;QAC1BL,cAAc,EAAGG,MAAM,CAACE;MAC5B,CAAC;IAEL,KAAK,iBAAiB;MAClBC,OAAO,CAACC,GAAG,CAAC,cAAc,GAAEJ,MAAM,CAACE,OAAO,CAAC;MAE3C,MAAMO,YAAY,GAAGV,KAAK,CAACJ,aAAa,CAACW,MAAM,CAAEI,IAAI,IAAKA,IAAI,CAACC,UAAU,CAACC,MAAM,GAAG,CAAC,CAAC;MAErF,IAAIC,KAAK,GAAG,EAAE;MAEd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,YAAY,CAACG,MAAM,EAAEE,CAAC,EAAE,EAAE;QAC5C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,YAAY,CAACK,CAAC,CAAC,CAACH,UAAU,CAACC,MAAM,EAAEG,CAAC,EAAE,EAAE;UAC1D,IAAIN,YAAY,CAACK,CAAC,CAAC,CAACH,UAAU,CAACI,CAAC,CAAC,CAACC,MAAM,KAAKhB,MAAM,CAACE,OAAO,EAAE;YAC3DW,KAAK,CAACI,IAAI,CAACR,YAAY,CAACK,CAAC,CAAC,CAAC;UAC7B;QACF;MACF;MACA,OAAO;QACL,GAAGf,KAAK;QACRN,SAAS,EAAGO,MAAM,CAACE,OAAO,KAAK,KAAK,GAAGH,KAAK,CAACJ,aAAa,GAAGkB;MAC/D,CAAC;IAED,KAAK,kBAAkB;MACnB,OAAM;QACF,GAAGd,KAAK;QACRN,SAAS,EAAEO,MAAM,CAACE;MACtB,CAAC;IAEL,KAAK,kBAAkB;MACnB,OAAM;QACF,GAAGH,KAAK;QACRN,SAAS,EAACO,MAAM,CAACE,OAAO,KAAK;MACjC,CAAC;IAML;MAAS,OAAOH,KAAK;EAAC;AAElC;AAEA,eAAeD,WAAW;;AAQ1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}